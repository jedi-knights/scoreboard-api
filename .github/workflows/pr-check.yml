name: PR Check - Quick Validation

on:
  pull_request:
    branches: [ main, develop ]

env:
  NODE_ENV: test
  TEST_DATABASE: sqlite

jobs:
  # Quick validation for PRs
  quick-check:
    name: Quick Validation
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run unit tests
        run: npm run test:unit

      - name: Run integration tests (SQLite)
        run: npm run test:integration
        env:
          TEST_DATABASE: sqlite

      - name: Check test coverage
        run: npm run test:coverage

      - name: Verify coverage threshold
        run: |
          # Extract coverage percentage
          coverage_output=$(npm run test:coverage 2>&1)
          echo "$coverage_output"
          
          # Check if coverage meets 80% threshold
          if echo "$coverage_output" | grep -q "All files.*80%"; then
            echo "✅ Coverage threshold met"
          else
            echo "❌ Coverage below 80% threshold"
            exit 1
          fi

      - name: Comment PR with results
        uses: actions/github-script@v7
        with:
          script: |
            const comment = `## 🚀 Quick PR Check Complete
            
            ### ✅ All essential checks passed!
            
            - **Linting**: ✅ Code quality standards met
            - **Unit Tests**: ✅ Business logic validated  
            - **Integration Tests**: ✅ API endpoints working (SQLite)
            - **Coverage**: ✅ Test coverage meets 80% threshold
            
            ### 📝 Next Steps
            - Full CI validation will run on merge
            - Consider adding more tests if coverage is close to threshold
            - Ready for review! 🎉`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
